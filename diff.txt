diff --git a/apps/web/src/components/editor/CollaborativeEditor.tsx b/apps/web/src/components/editor/CollaborativeEditor.tsx
index 7f5f681..b18d4af 100644
--- a/apps/web/src/components/editor/CollaborativeEditor.tsx
+++ b/apps/web/src/components/editor/CollaborativeEditor.tsx
@@ -5,6 +5,8 @@ import { ElectricYjsProvider } from "@/lib/y-electric/provider"
 import { createTiptapExtensions } from "./tiptap-extensions"
 import { usePresenceUser } from "@/lib/use-presence-user"
 import { ImageResizer } from "./ImageResizer"
+import { EditorRoot, EditorCommand, EditorCommandList, EditorCommandItem, EditorCommandEmpty, handleCommandNavigation } from '@docufy/content-kit';
+import { suggestionItems } from './slash-command';
 
 const yDocs = new Map<string, Y.Doc>()
 const providers = new Map<string, ElectricYjsProvider>()
@@ -51,6 +53,9 @@ export function CollaborativeEditor({
           class:
             "tiptap prose dark:prose-invert focus:outline-none max-w-full h-full",
         },
+        handleDOMEvents: {
+          keydown: (_view, event) => handleCommandNavigation(event),
+        },  
       },
     },
     // Any of these will work; documentId is simplest and stable.
@@ -79,14 +84,32 @@ export function CollaborativeEditor({
   ])
 
   return (
-    <div className="relative h-full">
-      <EditorContent
-        key={documentId}
-        editor={editor}
-        className="h-full p-4 sm:p-6"
-        autoFocus
-      />
-      <ImageResizer editor={editor} />
-    </div>
-  )
+    <EditorRoot>
+      <div className="relative h-full">
+        <EditorContent key={documentId} editor={editor} className="h-full p-4 sm:p-6" autoFocus />
+        <ImageResizer editor={editor} />
+  
+        {/* Slash Command palette (styled similar to Novelâ€™s) */}
+        <EditorCommand className="z-50 h-auto max-h-80 overflow-y-auto rounded-md border bg-card px-1 py-2 shadow-md">
+          <EditorCommandEmpty className="px-2 text-muted-foreground">No results</EditorCommandEmpty>
+          <EditorCommandList>
+            {suggestionItems.map((item) => (
+              <EditorCommandItem
+                key={item.title}
+                value={item.title}
+                onCommand={(val) => item.command?.(val)}
+                className="flex w-full items-center gap-2 rounded-md px-2 py-1 text-left text-sm hover:bg-accent aria-selected:bg-accent"
+              >
+                {item.icon ? <div className="flex h-10 w-10 items-center justify-center rounded-md border bg-background">{item.icon}</div> : null}
+                <div>
+                  <p className="font-medium">{item.title}</p>
+                  <p className="text-xs text-muted-foreground">{item.description}</p>
+                </div>
+              </EditorCommandItem>
+            ))}
+          </EditorCommandList>
+        </EditorCommand>
+      </div>
+    </EditorRoot>
+  );
 }
diff --git a/apps/web/src/components/editor/tiptap-extensions.ts b/apps/web/src/components/editor/tiptap-extensions.ts
index 7d00600..1ee11c6 100644
--- a/apps/web/src/components/editor/tiptap-extensions.ts
+++ b/apps/web/src/components/editor/tiptap-extensions.ts
@@ -6,6 +6,7 @@ import * as Y from "yjs"
 import { getExtensions } from "@docufy/content-kit/preset"
 import { uploadImageToBlob } from "@/lib/blob-uploader"
 import "@docufy/content-kit/styles.css"
+import { slashCommand } from './slash-command'; // <-- add
 
 export function createTiptapExtensions(
   doc: Y.Doc,
@@ -21,7 +22,7 @@ export function createTiptapExtensions(
         uploader: uploadImageToBlob,
         context: { orgSlug: ctx?.orgSlug, documentId: ctx?.documentId },
       },
-      extra: [],
+      extra: [slashCommand], 
     }),
     Collaboration.configure({ document: doc }),
     CollaborationCaret.configure({
diff --git a/apps/web/src/styles.css b/apps/web/src/styles.css
index 81852da..9b49931 100644
--- a/apps/web/src/styles.css
+++ b/apps/web/src/styles.css
@@ -779,3 +779,57 @@ html {
 .tiptap br.ProseMirror-trailingBreak {
   display: inline !important;
 }
+
+.tiptap .details {
+  display: flex;
+  gap: 0.25rem;
+  margin: 1.5rem 0;
+  padding: 0.5rem;
+
+  summary {
+    font-weight: 700;
+    /* there should be no marker here */
+    list-style-type: none;
+  }
+
+  > button {
+    align-items: center;
+    background: transparent;
+    border-radius: 4px;
+    display: flex;
+    font-size: 0.625rem;
+    height: 1.25rem;
+    justify-content: center;
+    line-height: 1;
+    margin-top: 0.1rem;
+    padding: 0;
+    width: 1.25rem;
+
+    &:hover {
+      background-color: var(--gray-3);
+    }
+
+    &::before {
+      content: '\25B6';
+    }
+  }
+
+  &.is-open > button::before {
+    transform: rotate(90deg);
+  }
+
+  > div {
+    display: flex;
+    flex-direction: column;
+    gap: 1rem;
+    width: 100%;
+
+    > [data-type='detailsContent'] > :last-child {
+      margin-bottom: 0.5rem;
+    }
+  }
+
+  .details {
+    margin: 0.5rem 0;
+  }
+}
\ No newline at end of file
diff --git a/apps/web/vite.config.ts b/apps/web/vite.config.ts
index 7f5b187..e0afdf1 100644
--- a/apps/web/vite.config.ts
+++ b/apps/web/vite.config.ts
@@ -24,7 +24,7 @@ const config = defineConfig({
     }),
   ],
   ssr: {
-    noExternal: ["zod", "inngest", "json-stringify-safe"],
+    noExternal: ["zod"],
   },
 })
 
diff --git a/packages/content-kit/package.json b/packages/content-kit/package.json
index 83ea147..184a1e4 100644
--- a/packages/content-kit/package.json
+++ b/packages/content-kit/package.json
@@ -44,6 +44,10 @@
     },
     "./styles.css": {
       "default": "./dist/styles/content-kit.css"
+    },
+    "./extensions/slash-command": {
+      "types": "./dist/extensions/slash-command/index.d.ts",
+      "import": "./dist/extensions/slash-command/index.js"
     }
   },
   "peerDependencies": {
@@ -55,10 +59,16 @@
   },
   "dependencies": {
     "@convex-dev/prosemirror-sync": "^0.1.28",
+    "@tiptap/extension-details": "^3.5.2",
+    "@tiptap/suggestion": "^3.5.2",
+    "cmdk": "^1.1.1",
     "highlight.js": "^11.11.1",
+    "jotai": "^2.14.0",
     "lowlight": "^3.3.0",
+    "tippy.js": "^6.3.7",
     "tiptap-extension-auto-joiner": "^0.1.3",
-    "tiptap-extension-global-drag-handle": "^0.1.18"
+    "tiptap-extension-global-drag-handle": "^0.1.18",
+    "tunnel-rat": "^0.1.2"
   },
   "devDependencies": {
     "@docufy/tsconfig": "workspace:*",
diff --git a/packages/content-kit/src/index.ts b/packages/content-kit/src/index.ts
index c7e5aa3..84feb5e 100644
--- a/packages/content-kit/src/index.ts
+++ b/packages/content-kit/src/index.ts
@@ -4,3 +4,24 @@ export * from './renderer/index.js';
 export * from './extensions/code-block/index.js';
 export * from './extensions/image/index.js';
 export * from './plugins/upload-images.js';
+export {
+    Command,
+    renderItems,
+    createSuggestionItems,
+    handleCommandNavigation,
+    type SuggestionItem,
+  } from './extensions/slash-command/index.js';
+  
+  // NEW: command UI + provider
+  export {
+    EditorRoot,
+  } from './components/editor-root.js';
+  export {
+    EditorCommand,
+    EditorCommandList,
+  } from './components/command/editor-command.js';
+  export {
+    EditorCommandItem,
+    EditorCommandEmpty,
+  } from './components/command/editor-command-item.js';
+  
\ No newline at end of file
diff --git a/packages/content-kit/src/preset/index.ts b/packages/content-kit/src/preset/index.ts
index 448ec83..fdf98b4 100644
--- a/packages/content-kit/src/preset/index.ts
+++ b/packages/content-kit/src/preset/index.ts
@@ -8,6 +8,7 @@ import { ResizableImage, StaticImage } from '../extensions/image/index.js';
 import CustomKeymap from '../extensions/custom-keymap/index.js';
 import { UploadImagesExtension } from '../plugins/upload-images.js';
 import GlobalDragHandle from 'tiptap-extension-global-drag-handle';
+import { Details, DetailsContent, DetailsSummary } from '@tiptap/extension-details'
 
 type Mode = 'editor' | 'static';
 
@@ -34,6 +35,14 @@ export function getExtensions(mode: Mode, opts: PresetOptions = {}) {
       undoRedo: false,
     }),
     AutoJoiner,
+    Details.configure({
+      persist: true,
+      HTMLAttributes: {
+        class: 'details',
+      },
+    }),
+    DetailsSummary,
+    DetailsContent,
   ];
 
   const extra = opts.extra ?? [];
